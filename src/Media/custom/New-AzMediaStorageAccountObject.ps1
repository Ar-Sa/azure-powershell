
# ----------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# Code generated by Microsoft (R) AutoRest Code Generator.Changes may cause incorrect behavior and will be lost if the code
# is regenerated.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Create an in-memory object for StorageAccount.
.Description
Create an in-memory object for StorageAccount.

.Outputs
Microsoft.Azure.PowerShell.Cmdlets.Media.Models.Api20211101.StorageAccount
.Link
https://learn.microsoft.com/powershell/module/az.Media/new-AzMediaStorageAccountObject
#>
function New-AzMediaStorageAccountObject {
    [OutputType('Microsoft.Azure.PowerShell.Cmdlets.Media.Models.Api20211101.StorageAccount')]
    [CmdletBinding(PositionalBinding=$false)]
    Param(

        [Parameter(HelpMessage="The ID of the storage account resource. Media Services relies on tables and queues as well as blobs, so the primary storage account must be a Standard Storage account (either Microsoft.ClassicStorage or Microsoft.Storage). Blob only storage accounts can be added as secondary storage accounts.")]
        [string]
        $Id,
        [Parameter(HelpMessage="Indicates whether to use System Assigned Managed Identity. Mutual exclusive with User Assigned Managed Identity.")]
        [bool]
        $UseSystemAssignedIdentity,
        [Parameter(HelpMessage="The user assigned managed identity's ARM ID to use when accessing a resource.")]
        [string]
        $UserAssignedIdentity,
        [Parameter(Mandatory, HelpMessage="The type of the storage account.")]
        [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.Media.Support.StorageAccountType])]
        [Microsoft.Azure.PowerShell.Cmdlets.Media.Support.StorageAccountType]
        $Type
    )

    process {
        $Object = [Microsoft.Azure.PowerShell.Cmdlets.Media.Models.Api20211101.StorageAccount]::New()

        if ($PSBoundParameters.ContainsKey('Id')) {
            $Object.Id = $Id
        }
        if ($PSBoundParameters.ContainsKey('UseSystemAssignedIdentity')) {
            $Object.IdentityUseSystemAssignedIdentity = $UseSystemAssignedIdentity
        }
        if ($PSBoundParameters.ContainsKey('UserAssignedIdentity')) {
            $Object.IdentityUserAssignedIdentity = $UserAssignedIdentity
        }
        if ($PSBoundParameters.ContainsKey('Type')) {
            $Object.Type = $Type
        }
        return $Object
    }
}

