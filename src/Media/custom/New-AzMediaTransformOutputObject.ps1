
# ----------------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# Code generated by Microsoft (R) AutoRest Code Generator.Changes may cause incorrect behavior and will be lost if the code
# is regenerated.
# ----------------------------------------------------------------------------------

<#
.Synopsis
Create an in-memory object for TransformOutput.
.Description
Create an in-memory object for TransformOutput.

.Outputs
Microsoft.Azure.PowerShell.Cmdlets.Media.Models.Api20211101.TransformOutput
.Link
https://learn.microsoft.com/powershell/module/az.Media/new-AzMediaTransformOutputObject
#>
function New-AzMediaTransformOutputObject {
    [OutputType('Microsoft.Azure.PowerShell.Cmdlets.Media.Models.Api20211101.TransformOutput')]
    [CmdletBinding(PositionalBinding=$false)]
    Param(

        [Parameter(HelpMessage="A Transform can define more than one outputs. This property defines what the service should do when one output fails - either continue to produce other outputs, or, stop the other outputs. The overall Job state will not reflect failures of outputs that are specified with 'ContinueJob'. The default is 'StopProcessingJob'.")]
        [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.Media.Support.OnErrorType])]
        [Microsoft.Azure.PowerShell.Cmdlets.Media.Support.OnErrorType]
        $OnError,
        [Parameter(Mandatory, HelpMessage="The discriminator for derived types.")]
        [string]
        $PresetOdataType,
        [Parameter(HelpMessage="Sets the relative priority of the TransformOutputs within a Transform. This sets the priority that the service uses for processing TransformOutputs. The default priority is Normal.")]
        [ArgumentCompleter([Microsoft.Azure.PowerShell.Cmdlets.Media.Support.Priority])]
        [Microsoft.Azure.PowerShell.Cmdlets.Media.Support.Priority]
        $RelativePriority
    )

    process {
        $Object = [Microsoft.Azure.PowerShell.Cmdlets.Media.Models.Api20211101.TransformOutput]::New()

        if ($PSBoundParameters.ContainsKey('OnError')) {
            $Object.OnError = $OnError
        }
        if ($PSBoundParameters.ContainsKey('PresetOdataType')) {
            $Object.PresetOdataType = $PresetOdataType
        }
        if ($PSBoundParameters.ContainsKey('RelativePriority')) {
            $Object.RelativePriority = $RelativePriority
        }
        return $Object
    }
}

